Contents of support code:0-byteBYbyte.pyReads from standard input and writes to the standard output, byte by byte.1-blockBYblock.pyReads from standard input and writes to the standard output, block by block.2-DataComm.pyMain process creates two more processes that communicate each other via two pipes.3-rnd-access.pyReads positions multiples of 4 from the file “Helian.fasta”4-fsz.pyComputes the file size of "Helian.fasta"5-pipe-basic.pyParent and child communicating via pipe6-sh-offset.pyCounts number of A in parallel, sharing the fd7-nonsh-offset.pyCounts number of A in sequential, non sharing the fd8-base-counters_shared.pyCounts how many bases A and G are in a FASTQ fileIt does not work properly because it’s sharing the file descriptor9-base-counters.pyCounts how many bases A and G are in a FASTQ fileIt works ok.10-redit.pySimulates the command-line $ cat < file1.txt > file2.txt11-lswc.pySimulates the command-line $ ls | wc